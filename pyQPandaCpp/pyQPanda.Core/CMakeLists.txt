cmake_minimum_required(VERSION 3.1)
project(pyQPanda)
file(GLOB_RECURSE pyQPanda_SRC_CPP *.cpp)
add_library(${PROJECT_NAME} SHARED ${pyQPanda_SRC_CPP})
if (UNIX)
    if (APPLE)
        set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ".so")
    endif(APPLE)
    set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
elseif(WIN32)
    if (NOT MSVC)
        set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
    endif()
    set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ".pyd")
endif(UNIX)
target_link_libraries(${PROJECT_NAME} QPanda2.0 QAlg Variational ${PYTHON_LIBRARIES})

set(PYQPANDA_OUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../pyQPanda/pyqpanda")
if (UNIX)
    set(PYQPANDA_OUT_LIB "${PROJECT_NAME}.so")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${LIBRARY_OUTPUT_PATH})
elseif (WIN32)
    set(PYQPANDA_OUT_LIB "${PROJECT_NAME}.pyd")
endif(UNIX)

add_custom_command(OUTPUT ${PYQPANDA_OUT_LIB}
   COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE}/${PYQPANDA_OUT_LIB} ${PYQPANDA_OUT_PATH}/${PYQPANDA_OUT_LIB}
 )
add_custom_target(CopyQPandaTask ALL DEPENDS ${PYQPANDA_OUT_LIB} ${PROJECT_NAME})
